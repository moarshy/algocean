apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: provider
  name: provider
spec:
  progressDeadlineSeconds: 60
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: provider
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: provider
    spec:
      containers:
      - env:
        - name: NETWORK_URL
          value: https://mainnet.infura.io/v3/5b10c1d10f19480dbb33a6150242c125
        - name: PROVIDER_PRIVATE_KEY
          value: 0xc594c6e5def4bab63ac29eed19a134c130388f74f019bc74b8f4389df2837a58
        - name: LOG_LEVEL
          value: INFO
        - name: OCEAN_PROVIDER_URL
          value: http://0.0.0.0:8030
        - name: OCEAN_PROVIDER_WORKERS
          value: "1"
        # - name: IPFS_GATEWAY
        #   value: < IPFS gateway if defined/available >
        - name: OCEAN_PROVIDER_TIMEOUT
          value: "9000"
        - name: AQUARIUS_URL
          value: aq-service:5000 #https://aquarius.marketplace.dev-ocean.com
        image: oceanprotocol/provider-py:latest
        name: provider
        ports:
        - containerPort: 8030
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: provider-service
spec:
  selector:
    app: provider
  ports:
    - protocol: TCP
      port: 8030
      targetPort: 8030
  type: LoadBalancer